<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Application</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .chat-container {
      display: flex;
      width: 80%;
      height: 80%;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      overflow: hidden;
    }

    .user-list {
      width: 25%;
      background-color: #fff;
      border-right: 1px solid #ddd;
      padding: 10px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
    }

    .user {
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 4px;
      cursor: pointer;
      box-shadow: 0 0 10px red;
      /* Default to offline */
    }

    .user.online {
      box-shadow: 0 0 10px green;
      /* Online status */
    }

    .user:hover {
      background-color: #f4f4f4;
    }

    .chat-section {
      flex: 1;
      display: flex;
      flex-direction: column;
      background-color: #fff;
    }

    .chat-header {
      background-color: #007bff;
      color: white;
      padding: 10px;
      text-align: center;
    }

    .chat-window {
      flex: 1;
      padding: 10px;
      overflow-y: auto;
      background-color: #f9f9f9;
    }

    .chat-window .message {
      margin: 5px 0;
      padding: 10px;
      border-radius: 4px;
      background-color: #f1f1f1;
    }

    .chat-input {
      display: flex;
      padding: 10px;
      background-color: #fff;
      border-top: 1px solid #ddd;
    }

    .chat-input input {
      flex: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-right: 10px;
    }

    .chat-input button {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 10px;
      cursor: pointer;
      border-radius: 4px;
    }

    .chat-input button:hover {
      background-color: #0056b3;
    }
  </style>
</head>

<body>
  <div class="chat-container">
    <div class="user-list" id="userList"></div>
    <div class="chat-section">
      <div class="chat-header">Public Chat</div>
      <div id="publicChat" class="chat-window"></div>
      <div class="chat-input">
        <input type="text" id="messageInput" placeholder="Type a message...">
        <button id="sendMessageBtn">Send</button>
      </div>
    </div>
  </div>

  <script>
    const ws = new WebSocket(`ws://${window.location.host}/?username=${encodeURIComponent(new URLSearchParams(window.location.search).get('username'))}`);

    ws.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === 'message') {
        displayMessage(data);
      } else if (data.type === 'userList') {
        displayUserList(data.data);
      } else if (data.type === 'pastMessages') {
        data.data.forEach(msg => {
          displayMessage(msg);
        });
      }
    };

    function displayMessage(message) {
      const chat = document.getElementById('publicChat');
      const messageElement = document.createElement('div');
      messageElement.className = 'message';
      messageElement.textContent = `${message.username}: ${message.data}`;
      chat.appendChild(messageElement);
    }

    function displayUserList(users) {
      const userList = document.getElementById('userList');
      userList.innerHTML = '';
      users.forEach(user => {
        const userElement = document.createElement('div');
        userElement.className = 'user';
        userElement.textContent = `${user.username} (${user.online ? 'Online' : 'Offline'})`;
        if (user.online) {
          userElement.classList.add('online');
        }
        userList.appendChild(userElement);
      });
    }

    document.getElementById('sendMessageBtn').addEventListener('click', () => {
      const messageInput = document.getElementById('messageInput');
      const username = new URLSearchParams(window.location.search).get('username');
      const message = { type: 'message', username, data: messageInput.value };
      ws.send(JSON.stringify(message));
      messageInput.value = '';
    });
  </script>
</body>

</html>