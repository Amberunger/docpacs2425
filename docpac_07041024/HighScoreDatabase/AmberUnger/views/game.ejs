<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= isPlaying ? 'Play Game' : 'Game Hub' %>
    </title>
    <link rel="stylesheet" href="/style.css">
    <link rel="icon" type="image/gif" href="/favicon.gif">
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: #2e2e2e;
            font-family: 'Cinzel', serif;
            color: #fff;
        }

        #game-container {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 10px;
            border: 2px solid #fff;
            box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
        }

        #scorebox,
        #timerbox,
        #directionbox {
            font-size: 4em;
            margin: 20px 0;
            color: #fff;
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
        }

        #directionbox {
            font-size: 2em;
        }

        #direction-image {
            width: 100px;
            height: 100px;
            margin: 20px 0;
            filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.8));
        }

        #axes {
            display: flex;
            flex-direction: column;
            margin: 20px 0;
        }

        #game-over-container {
            display: none;
        }

        .btn {
            margin: 5px;
            padding: 10px 15px;
            background-color: #fff;
            color: #000;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div id="game-container">
        <% if (isPlaying) { %>
            <h1>Game Time!</h1>
            <% if (loggedIn) { %>
                <p>Welcome back, <strong>
                        <%= username %>
                    </strong>! Get ready to play!</p>
                <div id="scorebox">Score = 0</div>
                <div id="timerbox">Time = 21</div>
                <div id="axes"></div>
                <img id="direction-image" src="" alt="Direction Image">
                <div id="directionbox"></div>
                <div id="game-over-container">
                    <h2>Game Over</h2>
                    <form id="saveScoreForm" method="POST" action="/score">
                        <input type="hidden" name="name" id="nameField"
                            value="<%= username %> (<%= new Date().toLocaleDateString() %>)">
                        <input type="hidden" name="score" id="finalScore">

                    </form>
                    <button class="btn" onclick="location.href='/'">Home</button>
                    <button class="btn" onclick="location.href='/hiscores'">High Scores</button>
                    <button class="btn" onclick="playAgain()">Play Again</button>
                </div>
                <% } else { %>
                    <p>You need to <a href="/login" class="btn">Login</a> to play the game.</p>
                    <% } %>
                        <% } else { %>
                            <h1>Welcome to the Game Hub</h1>
                            <% if (loggedIn) { %>
                                <p>You are logged in as <strong>
                                        <%= username %>
                                    </strong></p>
                                <a href="/play" class="btn">Play the Game</a>
                                <a href="/hiscores" class="btn">View High Scores</a>
                                <a href="/logout" class="btn">Log Out</a>
                                <% } else { %>
                                    <a href="/login" class="btn">Login</a> or <a href="/register"
                                        class="btn">Register</a>
                                    <% } %>
                                        <% } %>
    </div>
    <script>
        let score = 0;
        let direction = 0;
        let timer = 21;
        let way = "";
        let isGameOver = false;
        let lastPressTime = 0; // Track the last button press time
        const buttonCooldown = 100; // 0.5 seconds cooldown to prevent holding
        var wasPressed = false;
        var isPressed = false;

        // Function to refresh the page
        function refreshPage() {
            window.location.reload();
        }

        // Change direction every 2 seconds
        setInterval(() => {
            if (!isGameOver) {
                if (timer > 0) {
                    way = Math.floor(Math.random() * 4);
                    let directionImage = document.getElementById("direction-image");
                    if (way === 0) {
                        way = "up";
                        directionImage.src = "up.gif";
                    } else if (way === 2) {
                        way = "down";
                        directionImage.src = "down.gif";
                    } else if (way === 3) {
                        way = "left";
                        directionImage.src = "left.gif";
                    } else if (way === 1) {
                        way = "right";
                        directionImage.src = "right.gif";
                    }
                    document.getElementById("directionbox").innerHTML = "Direction = " + way;
                } else {
                    endGame();
                }
            }
        }, 2000);

        // End the game and show the game over screen
        function endGame() {
            isGameOver = true;
            document.getElementById("directionbox").innerHTML = "Game Over";
            document.getElementById("direction-image").src = "go.gif";
            document.getElementById("finalScore").value = score; // Set the score before submission

            autoSaveScore(); // Call this to auto-save the score

            document.getElementById("game-over-container").style.display = "block"; // Show game over options
        }

        // Function to auto-save score
        function autoSaveScore() {
            const now = new Date();
            const dateString = now.toLocaleDateString();  // Get the date
            const timeString = now.toLocaleTimeString();  // Get the time
            const name = "<%= username %> (" + dateString + " " + timeString + ")";  // Combine name, date, and time

            // Create a POST request to send data to the server without JSON
            fetch('/score', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',  // Update content type for form data
                },
                body: new URLSearchParams({
                    name: name,
                    score: score
                })
            }).then(response => {
                if (response.ok) {
                    console.log("Score saved successfully!");
                } else {
                    console.log("Failed to save score.");
                }
            });
        }

        window.addEventListener('gamepadconnected', (event) => {
            const update = () => {
                const output = document.getElementById('axes');
                output.innerHTML = ''; // clear the output

                for (const gamepad of navigator.getGamepads()) {
                    if (!gamepad) continue;

                    if (gamepad.buttons[9].pressed) { window.location.reload() }

                    if (gamepad.buttons[0].pressed != wasPressed) {
                        wasPressed = gamepad.buttons[0].pressed;
                        if (wasPressed) { // button pressed code
                            switch (true) {
                                case (gamepad.axes[1] <= -0.8 && way == "up" && timer > 0):
                                    score++;
                                    break;
                                case (gamepad.axes[1] >= 0.8 && way == "down" && timer > 0):
                                    score++;
                                    break;
                                case (gamepad.axes[0] == 1 && way == "right" && timer > 0):
                                    score++;
                                    break;
                                case (gamepad.axes[0] == -1 && way == "left" && timer > 0):
                                    score++;
                                    break;

                            }
                        }
                        document.getElementById("scorebox").innerHTML = "Score = " + score;

                    }
                }
                requestAnimationFrame(update);
            };
            update();
        });

        // Decrease the timer every second
        setInterval(() => {
            if (timer > 0 && !isGameOver) {
                timer--;
                document.getElementById("timerbox").innerHTML = "Time = " + timer;
            }
        }, 1000);

        // Function to handle replaying the game
        function playAgain() {
            score = 0;
            timer = 21;
            isGameOver = false;
            document.getElementById("directionbox").innerHTML = "";
            document.getElementById("direction-image").src = "";
            document.getElementById("game-over-container").style.display = "none"; // Hide the game over options
            lastPressTime = 0; // Reset the cooldown logic
        }
        res.render('game', {
            isPlaying: true,
            loggedIn: true,
            username: req.user.username // Make sure this is correctly set
        });
    </script>
</body>

</html>